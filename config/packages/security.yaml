security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        utilisateur :
           memory:
            users :
                ak :
                    password : '$2y$13$530WwsbZWffm4yW6jmzThuVxICy90peAcyh8.cdBsWBeWb4YoEVa'
                    roles : ['ROLE_ADMIN']
                alireza :
                    password : '$2y$13$530WwsbZWffm4yW6jmzThuVxICy90peAcyh8.cdBsWBeWb4YoEVa.'
                    roles : ['ROLE_SUPER_ADMIN']
                nadir :
                    password : '$2y$13$530WwsbZWffm4yW6jmzThuVxICy90peAcyh8.cdBsWBeWb4YoEVa.'
                    roles : ['ROLE_SUPER_ADMIN']
                sadmin :
                    password : '$2y$13$0DuIqbNdYvzUitBtLUuQsexWoxAzHYwLnQuZkj7UyxmdtumySHtwy '
                    roles : ['ROLE_SUPER_ADMIN']
                gilles :
                    password : '$2y$13$h8yw7FkeRyQc4qwWeRZoM.Wrs2hckLJ6ELDp/JA0THaVtUclblvPq '
                    roles : ['ROLE_ADMIN']
                rita :
                    password : '$2y$13$uryt5yEw.77.g15ljOea1erkPsQ5zO3XMImOz5Gf7EHEXop6tjbBO '
                    roles : ['ROLE_USER']
                simon:
                    password : ' $2y$13$kQSsKB4Ecp3vqPiSpY8E2.Plue6e5Hh5PF/jw.HTC25zvNaG4WcNq'
                    roles : ['ROLE_USER']
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: login
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\MyLoginFormAuthenticator
            logout:
                path: app_logout
                target : app_login
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER                            # un admin a les droits d'une user avec les siens en plus
        ROLE_SUPER_ADMIN: [ROLE_ADMIN] 


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
       - { path: ^/produit/add, roles: ROLE_ADMIN }
       - { path: ^/user/modif, roles: ROLE_ADMIN }
       - { path: ^/user/add/ROLE_ADMIN/0, roles: ROLE_SUPER_ADMIN }
       - { path: ^/user/add/ROLE_USER/0, roles: PUBLIC_ACCESS }
       - { path: ^/$, roles: PUBLIC_ACCESS }  


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
